---

- name: Create /opt/n8n_docker-compose directory
  file:
    path: "{{ n8n_directory }}"
    state: directory
    mode: "0750"

- name: Copy Dockerfile
  template:
    src: "{{ dockerfile_custom_template | default('Dockerfile_n8n_debian.j2') }}"
    dest: "{{ n8n_directory }}/{{n8n_dockerfile_name}}"

- name: Copy docker-compose.yml
  template:
    src: "{{ docker_compose_custom_template | default('docker-compose.j2') }}"
    dest: "{{ n8n_directory }}/docker-compose.yml"

- name: Create .env file
  copy:
    content: |
      N8N_BASIC_AUTH_ACTIVE={{ N8N_BASIC_AUTH_ACTIVE }}
      N8N_BASIC_AUTH_USER={{ N8N_BASIC_AUTH_USER }}
      N8N_BASIC_AUTH_PASSWORD={{ N8N_BASIC_AUTH_PASSWORD }}
      N8N_PROTOCOL={{ N8N_PROTOCOL }}
      N8N_PORT={{ N8N_PORT }}
      N8N_HOST={{ N8N_HOST }}
      WEBHOOK_TUNNEL_URL={{ WEBHOOK_TUNNEL_URL }}
      DB_TYPE={{ DB_TYPE }}
      DB_POSTGRESDB_HOST={{ DB_POSTGRESDB_HOST }}
      DB_POSTGRESDB_DATABASE={{ DB_POSTGRESDB_DATABASE }}
      DB_POSTGRESDB_USER={{ DB_POSTGRESDB_USER }}
      DB_POSTGRESDB_PASSWORD={{ DB_POSTGRESDB_PASSWORD }}
      POSTGRES_USER={{ POSTGRES_USER }}
      POSTGRES_PASSWORD={{ POSTGRES_PASSWORD }}
      POSTGRES_DB={{ POSTGRES_DB }}
    dest: "{{ n8n_directory }}/.env"
    force: yes

- name: Build n8n image
  command: docker build -f {{n8n_dockerfile_name}} -t {{n8n_docker_image}} .
  args:
    chdir: "{{ n8n_directory }}"

- name: Start n8n containers
  docker_compose:
    project_src: "{{ n8n_directory }}"


- name: Copy backup SQL file
  copy:
    src: "{{backup_sql}}"
    dest: "{{ n8n_directory }}/backup.sql"
  when: backup_sql is defined

- name: Copy backup import sql
  copy:
    src: "import_db_pg.sh"
    dest: "{{ n8n_directory }}/import_db_pg.sh"

- name: Copy backup export sql
  copy:
    src: "export_db_pg.sh"
    dest: "{{ n8n_directory }}/export_db_pg.sh"

- name: Make the scripts executable
  file:
    path: "{{ item }}"
    mode: u+x
  loop:
    - "{{ n8n_directory }}/export_db_pg.sh"
    - "{{ n8n_directory }}/import_db_pg.sh"


- name: execute import_db_pg.sh
  command: "./import_db_pg.sh backup.sql"
  args:
    chdir: "{{ n8n_directory }}"
  when: backup_sql is defined